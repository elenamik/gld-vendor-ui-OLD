/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Vendor, VendorInterface } from "../Vendor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOfETH",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOfTokens",
        type: "uint256",
      },
    ],
    name: "BuyTokens",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOfETH",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountOfTokens",
        type: "uint256",
      },
    ],
    name: "SellTokens",
    type: "event",
  },
  {
    inputs: [],
    name: "buyTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokens",
        type: "uint256",
      },
    ],
    name: "sellTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokensPerEth",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "yourToken",
    outputs: [
      {
        internalType: "contract YourToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610aed380380610aed83398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b610a01806100ec6000396000f3fe60806040526004361061007b5760003560e01c80638da5cb5b1161004e5780638da5cb5b146100fc578063cbdd69b51461011a578063d0febe4c1461013d578063f2fde38b1461014557600080fd5b80633ccfd60b146100805780636c11bcd31461008a578063715018a6146100aa5780637879e84b146100bf575b600080fd5b610088610165565b005b34801561009657600080fd5b506100886100a5366004610935565b6102e0565b3480156100b657600080fd5b50610088610550565b3480156100cb57600080fd5b506001546100df906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561010857600080fd5b506000546001600160a01b03166100df565b34801561012657600080fd5b5061012f606481565b6040519081526020016100f3565b6100886105b6565b34801561015157600080fd5b506100886101603660046108d2565b6107be565b306001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561019e57600080fd5b505afa1580156101b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d691906108f6565b6001600160a01b0316336001600160a01b03161461025a5760405162461bcd60e51b815260206004820152603660248201527f596f752063616e6e6f742077697468647261772c2073696e636520796f7520646044820152751bc81b9bdd081bdddb881d1a194818dbdb9d1c9858dd60521b60648201526084015b60405180910390fd5b60015460405163a9059cbb60e01b81523360048201523460248201526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b1580156102a557600080fd5b505af11580156102b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102dd9190610913565b50565b600081116103305760405162461bcd60e51b815260206004820152601d60248201527f4e65656420746f2073656c6c2061206e6f6e7a65726f20616d6f756e740000006044820152606401610251565b600061033d606483610967565b9050804710156103ac5760405162461bcd60e51b815260206004820152603460248201527f636f6e747261637420646f6573206e6f7420686f6c6420656e6f7567682065746044820152736820746f20627579206261636b20746f6b656e7360601b6064820152608401610251565b6001546040516323b872dd60e01b8152336004820152306024820152604481018490526000916001600160a01b0316906323b872dd90606401602060405180830381600087803b1580156103ff57600080fd5b505af1158015610413573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104379190610913565b9050806104785760405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b6044820152606401610251565b604051600090339084908381818185875af1925050503d80600081146104ba576040519150601f19603f3d011682016040523d82523d6000602084013e6104bf565b606091505b505080915050806105095760405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321032ba3432b960611b6044820152606401610251565b60408051338152602081018590529081018590527fa24838acd4af5195a2396965dae5abf54e84e8c19f5698bb966ae64e29994ee59060600160405180910390a150505050565b6000546001600160a01b031633146105aa5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610251565b6105b46000610882565b565b600034116106105760405162461bcd60e51b815260206004820152602160248201527f42757920616d6f756e74206d7573742062652067726561746572207468616e206044820152600360fc1b6064820152608401610251565b600061061d606434610989565b6001546040516370a0823160e01b815230600482015291925082916001600160a01b03909116906370a082319060240160206040518083038186803b15801561066557600080fd5b505afa158015610679573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069d919061094e565b10156106f65760405162461bcd60e51b815260206004820152602260248201527f56656e646f7220646f6573206e6f74206861766520656e6f75676820746f6b656044820152616e7360f01b6064820152608401610251565b60015460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561074257600080fd5b505af1158015610756573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077a9190610913565b50604080513381523460208201529081018290527f0a37b72bb67eee30e09084cf386f8a17817c57f620c3ab95fb25d6a20356ec779060600160405180910390a150565b6000546001600160a01b031633146108185760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610251565b6001600160a01b03811661087d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610251565b6102dd815b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156108e457600080fd5b81356108ef816109b6565b9392505050565b60006020828403121561090857600080fd5b81516108ef816109b6565b60006020828403121561092557600080fd5b815180151581146108ef57600080fd5b60006020828403121561094757600080fd5b5035919050565b60006020828403121561096057600080fd5b5051919050565b60008261098457634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156109b157634e487b7160e01b600052601160045260246000fd5b500290565b6001600160a01b03811681146102dd57600080fdfea2646970667358221220771c39fd8e5f4face2d0dd6e2e4d0db5e00f16e8e3ed37637de06860452123ac64736f6c63430008060033";

export class Vendor__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    tokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Vendor> {
    return super.deploy(tokenAddress, overrides || {}) as Promise<Vendor>;
  }
  getDeployTransaction(
    tokenAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(tokenAddress, overrides || {});
  }
  attach(address: string): Vendor {
    return super.attach(address) as Vendor;
  }
  connect(signer: Signer): Vendor__factory {
    return super.connect(signer) as Vendor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VendorInterface {
    return new utils.Interface(_abi) as VendorInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Vendor {
    return new Contract(address, _abi, signerOrProvider) as Vendor;
  }
}
